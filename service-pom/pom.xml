<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.ibm.epricer.services</groupId>
	<artifactId>service-pom</artifactId>
	<version>0.0.2-pom-SNAPSHOT</version>
	<name>service-pom</name>
	<packaging>pom</packaging>
	<description>Base POM for all business services</description>

	<properties>
		<java.version>11</java.version>
		<service-library-version>0.0.2-SNAPSHOT</service-library-version>
		<maven.build.timestamp.format>yyyy-MM-dd-HHmmss</maven.build.timestamp.format>
		<unique-tag>${maven.build.timestamp}</unique-tag>
		<skipDockerPush>false</skipDockerPush>
		<skipMavenDeploy>true</skipMavenDeploy>
		<skipCodeAnalysis>true</skipCodeAnalysis>
		<jacoco-verion>0.8.7</jacoco-verion>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
		<sonar.jacoco.reportsPaths>${project.build.directory}/jacoco.exec</sonar.jacoco.reportsPaths>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.ibm.epricer</groupId>
			<artifactId>service-library</artifactId>
			<version>${service-library-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

<!-- 		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency> -->
		<dependency>
			<groupId>com.ibm.epricer</groupId>
			<artifactId>epricer-common-lib</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.epricer</groupId>
			<artifactId>epricer-java-service-test-library</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
				    <groupId>org.sonarsource.scanner.maven</groupId>
				    <artifactId>sonar-maven-plugin</artifactId>
				    <version>3.7.0.1746</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-verion}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>${skipMavenDeploy}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>push</id>
						<phase>deploy</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>com.ibm.epricer.svclib.devops.BuildAndDeploy</mainClass>
							<skip>${skipDockerPush}</skip>
							<arguments>
								<argument>target/${project.build.finalName}.jar</argument>
								<argument>${cirrus.registry}</argument>
								<argument>${cirrus.project}</argument>
								<argument>${project.artifactId}</argument>
								<argument>${cirrus.username}</argument>
								<argument>${cirrus.password}</argument>
								<argument>${ops.gateway}</argument>
								<argument>${ops.gatewayuser}</argument>
								<argument>${ops.gatewaypwd}</argument>
								<argument>${build.number}</argument>
								<argument>${build.id}</argument>
								<argument>${build.log}</argument>
								<argument>${workload.repo}</argument>
								<argument>${workload.repouser}</argument>
								<argument>${workload.repopassword}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>pull-request-analysis</id>
						<phase>verify</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>com.ibm.epricer.svclib.devops.CodeQualityAnalyzer</mainClass>
							<skip>${skipCodeAnalysis}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jacoco-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/jacoco.exec</dataFile>
							<outputEncoding>UTF-8</outputEncoding>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.2.8</version>
			</dependency>
		</dependencies>
	</dependencyManagement>	
</project>
